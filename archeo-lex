#!/usr/bin/env python
# -*- coding: utf-8 -*-
# 
# Archéo Lex – Pure Histoire de la Loi française
# – crée un dépôt Git des lois françaises écrites en syntaxe Markdown
# 
# This program is free software. It comes without any warranty, to
# the extent permitted by applicable law. You can redistribute it
# and/or modify it under the terms of the Do What The Fuck You Want
# To Public License, Version 2, as published by Sam Hocevar. See
# the LICENSE file for more details.

# Imports
from __future__ import unicode_literals
from __future__ import absolute_import
from __future__ import division
from __future__ import print_function
from docopt import docopt
import os
import os.path

from marcheolex import logging, logger
from marcheolex import version_archeolex
#from marcheolex.basededonnees import initialisation_bdd
#from marcheolex.telecharger import obtenir_identifiants
#from marcheolex.telecharger import telecharger_fichiers_base
#from marcheolex.ranger import ranger
#from marcheolex.exporter import creer_historique
#from marcheolex.exporter import creer_historique_texte
from marcheolex.exporterlegi import creer_historique_legi
from marcheolex.utilitaires import nop
from marcheolex.utilitaires import obtenir_tous_textes

# Manuel d’aide
aide = ('''Usage: archeo-lex [--aide] [--debug] [--help] [--version] [--textes=<TEXTES>] [--base=<BASE>] [--livraison=<DATE>] [--exporterlegi] [--mise-a-jour | --nouveau] [--dialecte=<DIALECTE>] [--historique=<HISTORIQUE>] [--métadonnées] [--organisation=<TYPE>] [--bddlegi=<fichier>] [--cache=<dossier>] [--dossier=<dossier>]

-t --textes=<TEXTES>       Types de textes à télécharger :
                             - "constitution-de-1958",
                             - "codes",
                             - nom du code ("code-pénal"…),
                             - identifiant Légifrance (paramètre « cidTexte »)
-b --base=<BASE>           Base de données DILA ("LEGI"…)
-l --livraison=<DATE>      Date et heure de la livraison souhaitée
                             - "AAAAMMJJ-HHMMSS ("20140718-113010"…)
                             - "fondation"
                             - "tout"


   --exporterlegi          Exporter les textes (legi.py)


   --mise-a-jour           Effectuer seulement une mise à jour
   --nouveau               Effacer et repartir du début, sauf le téléchargement


   --dialecte=<DIALECTE>   Dialecte de structuration des textes :
                             - "markdown" (défaut)
   --historique=<HIST>     Fabrique l’historique avec le système :
                             - "git" (défaut)
                             - "fichiers" : plusieurs fichiers avec les dates [inactif]
   --métadonnées           Afficher les métadonnées dans le texte
   --organisation=<TYPE>   Organisation de l’arborescence des fichiers :
                             - "fichier-unique" (défaut) : unique fichier
                             - "repertoires-simple" : un répertoire par article, sans hiérarchie
                             - "repertoires-hiérarchie" : un répertoire par section ou article [inactif]


   --bddlegi=<fichier>     Nom de la base de données de legi.py, par défaut "legi.sqlite"
   --cache=<dossier>       Dossier de cache, par défaut "cache"
   --dossier=<dossier>     Dossier de sortie, par défaut "textes"


-a --aide                  Afficher ce message d’aide
-h --help                  Afficher ce message d’aide
-d --debug                 Données de DEBUG affichées
-v --version               Version d’Archéo Lex
''')


def principal(arguments):
    
    # Action "version"
    if arguments.get('--version') or arguments.get('-v'):
        print('Archéo Lex – pure Histoire de Loi française – version '+version_archeolex)
        return

    # Action "aide"
    if arguments.get('--aide') or arguments.get('--help'):
        print(aide)
        return

    if arguments.get('--debug') or arguments.get('-d'):
        logger.setLevel(logging.DEBUG)
    else:
        logger.setLevel(logging.INFO)
    
    # Actions à considérer
    action_exporterlegi = arguments.get('--exporterlegi') or True
    
    if not(action_exporterlegi):
        action_exporterlegi = True
    
    # Lecture des données de format
    data = {}
    data['textes'] = ((arguments.get('--textes') or '').decode('utf-8') or 'LEGITEXT000006069414').split(',')
    data['base'] = arguments.get('--base') or 'LEGI'
    data['livraison'] = arguments.get('--livraison') or 'tout'
    data['format'] = {}
    data['format']['dialecte'] = arguments.get('--format') or 'markdown'
    data['format']['historique'] = arguments.get('--historique') or 'git'
    data['format']['metadonnees'] = arguments.get('--metadonnees') or False
    data['format']['organisation'] = arguments.get('--organisation') or 'fichier-unique'
    
    # Lecture des autres paramètres
    data['bddlegi'] = (arguments.get('--bddlegi') or '').decode('utf-8') or 'cache/sql/legi.sqlite'
    data['cache'] = (arguments.get('--cache') or '').decode('utf-8') or 'cache'
    data['dossier'] = (arguments.get('--dossier') or '').decode('utf-8') or 'textes'
    data['effacer'] = not arguments.get('--mise-a-jour') or arguments.get('--nouveau') or False
    #data['effacer'] = arguments.get('--nouveau') or not arguments.get('--mise-à-jour') or False
    
    # Création des dossiers de cache
    for dir in (data['cache'], data['cache']+'/bases-xml', data['cache']+'/divers', data['cache']+'/html', data['cache']+'/markdown', data['cache']+'/sql', data['dossier']):
        if not os.path.exists(dir):
           os.makedirs(dir)

    # Recherche des identifiants
    #if data['textes'] == ['tous']:
    #    data['textes'] = obtenir_tous_textes(data['base'], data['cache'])
    #else:
    #    logger.info('Recherche des identifiants')
    #    data['textes'] = obtenir_identifiants(data['textes'], data['cache'])
    #logger.info('Textes demandés')
    #if len(data['textes']) > 10:
    #    logger.info('  ({} textes)'.format(len(data['textes'])))
    #else:
    #    for t in data['textes']:
    #        logger.info('* {} : {}'.format(t[1], t[0]))
    
    if action_exporterlegi:
        logger.info('Création de l’historique (legi.py)')
        creer_historique_legi(data['textes'], data['format'], data['dossier'], data['cache'], data['bddlegi'])

if __name__ == "__main__":
    principal(docopt(aide, help=False))

# vim: set ts=4 sw=4 sts=4 et:
